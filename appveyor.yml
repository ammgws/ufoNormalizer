environment:

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # install Python and pip when not already installed
  - ps: (new-object net.webclient).DownloadFile('https://raw.githubusercontent.com/pypa/python-packaging-user-guide/master/source/code/install.ps1', 'install.ps1')
  - ps: if (-not(Test-Path($env:PYTHON))) { & install.ps1 }

  # prepend newly installed Python to the PATH
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # upgrade pip to avoid out-of-date warnings
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # install wheel to build compiled packages
  # - "pip install --upgrade wheel"

  # install requirements
  - "pip install git+https://github.com/behdad/fonttools.git"

  # install
  - "python setup.py install"

build: false

test_script:
  - "python setup.py test"

# after_test:
#   # if tests are successful, create binary packages for the project
#   - "pip wheel -w dist ."

# artifacts:
#   # archive the generated packages in the ci.appveyor.com build report
#   - path: dist\*
